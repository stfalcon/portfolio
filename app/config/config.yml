imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:       { fallback: ru }
    secret:           %secret%
    router:           { resource: "%kernel.root_dir%/config/routing.yml" }
    form:             true
    csrf_protection:  true
    validation:       { enable_annotations: true }
    templating:
        engines: ['twig']
        assets_version: 20120724
    default_locale:   %locale%
    session:          ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%


# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# DoctrineMigrationsBundle
doctrine_migrations:
    dir_name: %kernel.root_dir%/DoctrineMigrations


# DoctrineExtensionsBundle
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            loggable: false
            sluggable: true
            timestampable: true
            translatable: false
            tree: false


# AsseticBundle
assetic:
    debug:          %kernel.debug%
    use_controller: false
    filters:
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.6.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.6.jar"
        cssrewrite: ~
    assets:
        jquery: vendor/jquery/jquery-1.7.2.min.js
        jquery_ui: vendor/jquery-ui/jquery-ui-1.8.19.custom.min.js

# MenuBundle enable template helpers
knp_menu:
    templating: true
    twig: true

knp_paginator:
    default_options:
        page_name: page                # page query parameter name
        distinct: false                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:sliding.html.twig     # sliding pagination controls template

# ZendCacheBundle
#knp_zend_cache:
#    templates:
#        slow_cache:
#            frontend:
#                name: Core
#                options:
#                    lifetime: 7200
#                    automatic_serialization: true
#            backend:
#                name: File
#                options:
#                    cache_dir: %kernel.root_dir%/cache/%kernel.environment%


sensio_framework_extra: ~

application_default:
    web_root: %kernel.root_dir%/../web
    upload_dir: /uploads/images

stfalcon_blog:
    disqus_shortname: "stfalcon-studio"
    rss:
        title: "Блог веб-студии stfalcon.com"
        description: "Заметки о используемых технологиях, реализованных проектах, трудовых буднях и отдыхе :)"
    post:
        entity: Application\Bundle\BlogBundle\Entity\Post
        repository: Application\Bundle\BlogBundle\Repository\PostRepository
        admin:
            class: Application\Bundle\BlogBundle\Admin\PostAdmin

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.user.block.menu:
        sonata.user.block.account:

vich_uploader:
    db_driver: orm
    mappings:
        project_image:
            upload_destination: %kernel.root_dir%/../web/uploads/portfolio/projects
            namer: vich_uploader.namer_uniqid
            delete_on_update: true
            delete_on_remove: true
        user_avatar:
            uri_prefix: /uploads/avatar
            upload_destination: %kernel.root_dir%/../web/uploads/avatar
            namer: vich_uploader.namer_uniqid
        user_caricature:
            uri_prefix: /uploads/avatar/caricature
            upload_destination: %kernel.root_dir%/../web/uploads/avatar/caricature
            namer: vich_uploader.namer_uniqid

sonata_admin:
    templates:
        layout: "::admin.html.twig"

sonata_admin:
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            STAFF:    [LIST, CREATE]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\Bundle\UserBundle\Entity\User
    group:
        group_class: Application\Bundle\UserBundle\Entity\Group

sonata_user:
    class:
        user: Application\Bundle\UserBundle\Entity\User
        group: Application\Bundle\UserBundle\Entity\Group
    admin:                  # Admin Classes
        user:
            class: Application\Bundle\UserBundle\Admin\UserAdmin

stfalcon_portfolio:
    project:
        entity: Application\Bundle\PortfolioBundle\Entity\Project
        repository: Application\Bundle\PortfolioBundle\Repository\ProjectRepository
        admin:
            class: Application\Bundle\PortfolioBundle\Admin\ProjectAdmin
    category:
        entity: Application\Bundle\PortfolioBundle\Entity\Category
        repository: Application\Bundle\PortfolioBundle\Repository\CategoryRepository

avalanche_imagine:
    filters:
        project_thumb:
            type:    thumbnail
            options: { size: [300, 264], mode: outbound }
        avatar:
            type:    thumbnail
            options: { size: [134, 134], mode: outbound }
        avatar_small:
            type:    thumbnail
            options: { size: [48, 48], mode: outbound }

sonata_media:
    class:
        media: Application\Bundle\MediaBundle\Entity\Media
        gallery: Application\Bundle\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Bundle\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 100 , quality: 70}
                slide:   { width: 720 , quality: 70}

    cdn:
        server:
            path: /uploads/media

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true        group: Application\Bundle\UserBundle\Entity\Group